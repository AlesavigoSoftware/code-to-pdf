#!/usr/bin/ruby

require 'rubygems'
require 'optparse'
$:.push File.expand_path('../../lib', __FILE__)
require 'code2pdf'
require 'rbconfig'

case RbConfig::CONFIG['host_os']
when /mswin|msys|mingw|cygwin|bccwin|wince|emc/
  OS_NAME = "Windows"
when /darwin|mac os/
  OS_NAME = "Mac OS"
when /linux/
  OS_NAME = "Linux"
when /solaris|bsd/
  OS_NAME = "Unix"
else
  OS_NAME = "Unknown OS"
end

options = { theme: 'default' }

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: code2pdf [OPTIONS] <project path>\n\nYou can use flags as such:"

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  opts.on('-v', '--version', 'Display version') do
    require 'code2pdf/version'
    puts Code2pdf::VERSION
    exit
  end

  opts.on('-fn', '--filename=source_code', 'Out pdf file name') do |fn|
    options[:filename] = fn
  end

  opts.on('-fs', '--fontsize=14px', 'File font size') do |fs|
    options[:font_size] = fs
  end

  opts.on("-t", "--theme=github", String, "PDF Theme to use: default or github") do |t|
    options[:theme] = t
  end

  opts.on("-f", "--from=DIR", String, "Source dir") do |f|
    options[:from] = f
  end

  if ARGV.empty?
    puts opts
    exit 1
  end
end

begin
  rest = optparse.parse!
rescue OptionParser::InvalidOption => exception
  puts exception
  exit 1
end

if rest.empty? && options[:from] == nil
  puts optparse
  exit 1
elsif options[:from] == nil
  options[:from] = rest[0];
end

PATH = options[:from].gsub(/\/$/, '')
BLACK_LIST_YAML_FILE = "#{PATH}/.code2pdf".freeze

filename = "#{options[:filename]}.pdf"
ConvertToPDF.new from: PATH, to: filename, except: BLACK_LIST_YAML_FILE, theme: options[:theme], os_name: OS_NAME, font_size: options[:font_size]